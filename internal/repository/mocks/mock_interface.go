// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repository/main.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "aksan-go-crud/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepoInf is a mock of RepoInf interface.
type MockRepoInf struct {
	ctrl     *gomock.Controller
	recorder *MockRepoInfMockRecorder
}

// MockRepoInfMockRecorder is the mock recorder for MockRepoInf.
type MockRepoInfMockRecorder struct {
	mock *MockRepoInf
}

// NewMockRepoInf creates a new mock instance.
func NewMockRepoInf(ctrl *gomock.Controller) *MockRepoInf {
	mock := &MockRepoInf{ctrl: ctrl}
	mock.recorder = &MockRepoInfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoInf) EXPECT() *MockRepoInfMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRepoInf) Get() ([]*entity.DataGame, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]*entity.DataGame)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRepoInfMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRepoInf)(nil).Get))
}

// Save mocks base method.
func (m *MockRepoInf) Save(data *entity.DataGame) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockRepoInfMockRecorder) Save(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockRepoInf)(nil).Save), data)
}
